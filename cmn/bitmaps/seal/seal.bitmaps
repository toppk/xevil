/* 
 * XEvil(TM) Copyright (C) 1994,2000 Steve Hardt and Michael Judge
 * http://www.xevil.com
 * satan@xevil.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program, the file "gpl.txt"; if not, write to the Free
 * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA, or visit http://www.gnu.org.
 */

  
#if X11
#include "gen_xpm/baby_seal/baby_seal_0.xpm"
#include "gen_xpm/baby_seal/baby_seal_0b.xpm"
#include "gen_xpm/baby_seal/baby_seal_25.xpm"
#include "gen_xpm/baby_seal/baby_seal_4.xpm"
#endif



Size Seal::get_size_max() {
  return creatureContext.movingContext.physicalContext.sizeMax;
}



PhysicalP Seal::create(void *,WorldP w,LocatorP l,const Pos &pos) {
  PhysicalP ret = new Seal(w,l,pos);
  assert(ret);
  return ret;
}



CreatureXdata Seal::creatureXdata;
GroundedXdata Seal::groundedXdata;
SuicideXdata Seal::suicideXdata;
AnimTimeXdata Seal::animTimeXdata;



const CreatureContext Seal::creatureContext = 
{ /** CreatureContext **/
  0, /* crawlSpeed */
  2, /* centerSpeed */
  12, /* airSpeed */
  0, /* climbSpeed */
  0,  /* jump */
  1,  /* acceleration */ 
  90, /* corpseHealth */
  
  True, /* biological */
  DROPLET_BLOOD, /* dropletType */
  SoundNames::SEAL_DEATH, /* deadSoundId */

  {/** MovingContext **/
#if WIN32
    RGB(0,255,0)/*"green4"*/,False, 
    RGB(0,0,255)/*"blue"*/,False,
#endif
#if X11
    "white",True, 
    "black",False,
#endif
    
    /* animMax */
    {2,2,1,1,1,1,
     0,
     0,0,
     0,
     0,0,
     0,
     0,0,
     0,
     0,0,
     0,
     0,0,
     1,1,
     0,0,
     1, /* deadAnimMax */
    },
     
    /* sizes */
    {{14,11},{14,11},{14,11},{14,11},{11,11},{11,11},
     {0,0},
     {0,0},{0,0},
     {0,0},
     {0,0},{0,0},
     {0,0},
     {0,0},{0,0},
     {0,0},
     {0,0},{0,0},
     {0,0},          /* Must be    */
     {0,0},{0,0},  /* same size. */
     {11,11},{11,11},	
     {0,0},{0,0},
     {19,4}, /* deadSize */
    },
    
    /* offsets */
    {{0}},
    
    /* pixmapBits */
    {{CMN_ID(baby_seal_0,IDB_SEAL0),CMN_ID(baby_seal_0b,IDB_SEAL0B)},
     {PH_AUTO_GEN},
     {CMN_ID(baby_seal_0b,IDB_SEAL0B)},{PH_AUTO_GEN},
     {CMN_ID(baby_seal_4,IDB_SEAL5)},{CMN_ID(baby_seal_4,IDB_SEAL5)},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {PH_AUTO_GEN},{PH_AUTO_GEN},
     {0},{0},
	 {CMN_ID(baby_seal_25,IDB_SEALDEAD)}, /* deadPixmapBits */
    },
    
    /* maskBits */
    {{0}},

    {/** PhysicalContext **/
      45, /* health */
      80, /* mass */
      A_Seal, /* classId */
      "baby-seal", /* clas */

      False, /* transmogifyTarget */
      True, /* doppelUser */
      False, /* potentialHuman */
      False, /* potentialEnemy */
      0, /* enemyWeight */
      False, /* potentialWeapon */
      False, /* potentialOtherItem */
      0.0f, /* objectWorldPercent */
      0, /* levelMaxTimes */
      {19,11}, /* sizeMax */
      Seal::create, /* create */
      False, /* statsCreations */
      False, /* statsUses */
      True, /* statsDeaths */
      Seal::get_stats, /* get_stats */
      NULL, /* arg */
      Seal::init_x, /* init_x */
      Seal::create_from_stream, /* create_from_stream */
    },
    True, /* hiRes */
    0, /* offsetGenerator */
    0, /* transformOverride */
    True, /* useXPM */
	False, /* invisibility */
  },
};



const GroundedContext Seal::groundedContext =
{ /** GroundedContext **/
  0, /* dummy */
};



const SuicideContext Seal::suicideContext =
{ /** SuicideContext **/
  0, /* dummy */
};



const AnimTimeContext Seal::animTimeContext = 
{ /** AnimTimeContext **/
  5, /* animTime */
};
