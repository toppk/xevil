/* 
 * XEvil(TM) Copyright (C) 1994,2000 Steve Hardt and Michael Judge
 * http://www.xevil.com
 * satan@xevil.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program, the file "gpl.txt"; if not, write to the Free
 * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA, or visit http://www.gnu.org.
 */


#if X11
#include "gen_xpm/pistol/pistol_4.xpm"
#endif



Size Pistol::get_size_max() {
  return context.weaponContext.itemContext.fallingContext.movingContext.sizes[CO_air];
}



PhysicalP Pistol::create(void *,WorldP w,LocatorP l,const Pos &pos) {
  PhysicalP ret = new Pistol(w,l,pos);
  assert(ret);
  return ret;
}



static void pistol_get_item_info(Boolean &isItem,Boolean &isWeapon,
                                 CMN_BITS_ID &iconId) {
  isItem = True;
  isWeapon = True;
#if WIN32
  iconId = IDB_HIPISTOL;
#endif
#if X11
  iconId = 0;
#endif
}



GunXdata Pistol::xdata;



const GunContext Pistol::context = 
{ /** GunContext **/
  12, /* shotTime */
  10, /* ammoInitial */
  30, /* ammoMax */

  { /** WeaponContext **/
	SoundNames::PISTOL,

    { /** ItemContext **/
      True, /* persists */
      5000, /* coolness */
	  0, /*item use sound */
      { /** FallingContext **/
        {/** MovingContext **/
#if X11
          "black",False,
          Xvars_BACKGROUND,True,
#endif
#if WIN32	  
          RGB(0,0,0)/*"black"*/,False,
          Xvars_BACKGROUND,True,
#endif	  

          /* animMax */
          {0,0,0,0,1},
          
          /* sizes */
          {{0,0},{0,0},{0,0},{0,0},{10,9},},
          
          /* offsets */
          {{0}},
	  
          /* pixmapBits */
          {{0},{0},{0},{0},{CMN_ID(pistol_4,IDB_HIPISTOL)}},
          
          /* maskBits */
          {{0}},
          
          { /** PhysicalContext **/
            5, /* health */
            7, /* mass */
            A_Pistol, /* classId */
            "pistol", /* className */
            
            False, /* transmogifyTarget */
            False, /* doppelUser */
            False, /* potentialHuman */
            False, /* potentialEnemy */
            0, /* enemyWeight */
            True, /* potentialWeapon */
            False, /* potentialOtherItem */
            0.0004f, /* objectWorldPercent */
            0, /* levelMaxTimes */
            {10,9}, /* sizeMax */
            Pistol::create, /* create */
            False, /* statsCreations */
            False, /* statsUses */
            False, /* statsDeaths */
            NULL, /* get_stats */
            NULL, /* arg */
            Pistol::init_x, /* init_x */
            Pistol::create_from_stream, /* create_from_stream */
            pistol_get_item_info, /* get_item_info */
          },
          True, /* hiRes */
          0, /* offsetGenerator */
          0, /* transformOverride */
          True, /* useXPM */
        },
      },
    },
  },
};
