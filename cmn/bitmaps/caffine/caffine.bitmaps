/* 
 * XEvil(TM) Copyright (C) 1994,2000 Steve Hardt and Michael Judge
 * http://www.xevil.com
 * satan@xevil.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program, the file "gpl.txt"; if not, write to the Free
 * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA, or visit http://www.gnu.org.
 */

// For CaffineM and Caffine.


#if X11
#include "gen_xpm/caffine/caffine_4.xpm"
#endif



#define CAFFINE_M_TIME 300



Size Caffine::get_size_max() {
  return context.autoUseContext.itemContext.fallingContext.movingContext.sizes[CO_air];
}  


PhysicalP Caffine::create(void *,WorldP w,LocatorP l,const Pos &pos) {
  PhysicalP ret = new Caffine(w,l,pos);
  assert(ret);
  return ret;
}



static void caffine_get_item_info(Boolean &isItem,Boolean &isWeapon,
                                  CMN_BITS_ID &iconId) {
  isItem = True;
  isWeapon = False;
#if WIN32
  iconId = IDB_CAFFINE;
#endif
#if X11
  iconId = 0;
#endif
}



DrugsXdata Caffine::xdata;



const DrugsContext Caffine::context = 
{ /** DrugsContext **/
  0, /* odChance */

  { /** AutoUseContext **/
    False, /* humansOnly */

    { /** ItemContext **/
      True, /* persists */
      6500, /* coolness */
      0,
      { /** FallingContext **/
        {/** MovingContext **/
#if X11
        "white",True,
        "brown4",False,
#endif
#if WIN32
        RGB(255,0,0)/*"red"*/,True,
        RGB(255,255,255)/*"white"*/,False,
#endif
          
        /* animMax */
        {0,0,0,0,1},

        /* sizes */
        {{0,0},{0,0},{0,0},{0,0},{6,11},},

        /* offsets */
        {{0,0},{0,0},{0,0},{0,0},{0,0},},

        /* pixmapBits */
        {{0},{0},{0},{0},{CMN_ID(caffine_4,IDB_CAFFINE)},},

        /* maskBits */
        {{0}},

        { /** PhysicalContext **/
	        1, /* health */
	        3, /* mass */
	        A_Caffine, /* classId */
	        "caffine", /* className */
    
	        False, /* transmogifyTarget */
	        False, /* doppelUser */
	        False, /* potentialHuman */
	        False, /* potentialEnemy */
	        0, /* enemyWeight */
	        False, /* potentialWeapon */
	        True, /* potentialOtherItem */
	        0.0003f, /* objectWorldPercent */
	        6, /* levelMaxTimes */
	        {6,11}, /* sizeMax */
	        Caffine::create, /* create */
	        False, /* statsCreations */
	        True, /* statsUses */
	        False, /* statsDeaths */
	        Caffine::get_stats, /* get_stats */
          NULL, /* arg */
          Caffine::init_x, /* init_x */
          Caffine::create_from_stream, /* create_from_stream */
	        caffine_get_item_info, /* get_item_info */
        },          
          True, /* hiRes */
          0, /* offsetGenerator */
          0, /* transformOverride */
          True, /* useXPM */
        },
      },
    },
  }
};
