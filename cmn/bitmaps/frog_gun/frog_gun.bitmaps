/* 
 * XEvil(TM) Copyright (C) 1994,2000 Steve Hardt and Michael Judge
 * http://www.xevil.com
 * satan@xevil.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program, the file "gpl.txt"; if not, write to the Free
 * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA, or visit http://www.gnu.org.
 */


#if X11
#include "gen_xpm/frog_gun/frog_gun_4.xpm"
#endif



Size FrogGun::get_size_max() {
  return context.gunContext.weaponContext.itemContext.fallingContext.
    movingContext.sizes[CO_air];
}



PhysicalP FrogGun::create(void *,WorldP w,LocatorP l,const Pos &pos) {
  PhysicalP ret = new FrogGun(w,l,pos);
  assert(ret);
  return ret;
}



static void frog_gun_get_item_info(Boolean &isItem,Boolean &isWeapon,
                                   CMN_BITS_ID &iconId) {
  isItem = True;
  isWeapon = True;
#if WIN32
  iconId = IDB_FROGGUN;
#endif
#if X11
  iconId = 0;
#endif
}



SingleGunXdata FrogGun::xdata;



const SingleGunContext FrogGun::context = 
{ /** SingleGunContext **/
  { /** GunContext **/
    10, /* shotTime */
    PH_AMMO_UNLIMITED, /* ammoInitial */
    PH_AMMO_UNLIMITED, /* ammoMax */
    
    { /** WeaponContext **/
      SoundNames::FROGGUN,
      { /** ItemContext **/
        True, /* persists */
        700, /* coolness */
        0, /*item use sound */
        
        { /** FallingContext **/
          {/** MovingContext **/
#if X11
            "black",False,
            Xvars_BACKGROUND,True,
#endif
#if WIN32
            RGB(0,0,0)/*"black"*/,FALSE,
            Xvars_BACKGROUND,TRUE,
#endif	    
            /* animMax */
            {0,0,0,0,1},
            
            /* sizes */
            {{0,0},{0,0},{0,0},{0,0},{14,8},},
            
            /* offsets */
            {{0}},
            
            /* pixmapBits */
            {{0},{0},{0},{0},{CMN_ID(frog_gun_4,IDB_FROGGUN)},},
	    
            /* maskBits */
            {{0}},

            { /** PhysicalContext **/
              5, /* health */
              9, /* mass */
              A_FrogGun, /* classId */
              "frog-gun", /* clas */
              
              False, /* transmogifyTarget */
              False, /* doppelUser */
              False, /* potentialHuman */
              False, /* potentialEnemy */
              0, /* enemyWeight */
              True, /* potentialWeapon */
              False, /* potentialOtherItem */
              .0002f, /* objectWorldPercent */
              0, /* levelMaxTimes */
              {14,8}, /* sizeMax */
              FrogGun::create, /* create */
              False, /* statsCreations */
              False, /* statsUses */
              False, /* statsDeaths */
              NULL, /* get_stats */
              NULL, /* arg */
              FrogGun::init_x, /* init_x */
              FrogGun::create_from_stream, /* create_from_stream */
              frog_gun_get_item_info, /* get_item_info */
            },
            True, /* hiRes */
            0, /* offsetGenerator */
            0, /* transformOverride */
            True, /* useXPM */
          },
        },
      },
    },
  },
};
